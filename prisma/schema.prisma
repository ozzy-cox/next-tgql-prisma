datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

generator client {
  provider = "prisma-client-js"
}

generator typegraphql {
  provider = "typegraphql-prisma"
  output   = "../prisma/generated/type-graphql"
  // emitOnly = "enums, models, crudResolvers, relationResolvers, inputs,outputs"
  // useSimpleInputs = true
  // simpleResolvers = true // may improve resolver performance
  // emitIdAsIDType = true // emits id as id type instead of prisma type, needed for using relay
}

// Models and fields can be renamed
// Plural form can be changed with @@TypeGraphQL.type(plural: "StaffMembers")

model User {
  id       String  @id @default(cuid())
  email    String  @unique
  name     String?
  /// @TypeGraphQL.omit(output: true)
  password String
  posts    Post[]
}

model Post {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  published Boolean
  title     String
  content   String?
  author    User?    @relation(fields: [authorId], references: [id])
  authorId  String?
}
